<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Buy Affordable Car Parts Online | Garage Parts Store</title>
    <meta name="description" content="Shop high-quality car parts for all vehicles at unbeatable prices. Fast shipping via trusted partners.">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <header>
        <h1>Unbeatable Car Parts Deals – Shop Now & Save Big!</h1>
    </header>
    <main>
        <section id="productGrid" class="product-grid">
            <% if (products && products.length > 0) { %>
                <% products.forEach(product => { %>
                    <div class="product-card">
                        <div class="product-carousel" data-product-id="<%= product.id %>">
                            <div class="carousel-main">
                                <% if (product.image) { %>
                                    <img src="<%= product.image %>" alt="<%= product.name || 'Product' %> - Main Image" class="main-image" onerror="this.src='https://via.placeholder.com/150';">
                                <% } else { %>
                                    <img src="https://via.placeholder.com/150" alt="No Image" class="main-image">
                                <% } %>
                            </div>
                            <div class="carousel-thumbnails">
                                <% (product.additionalImages || []).forEach((img, index) => { %>
                                    <div class="carousel-slide thumbnail">
                                        <img src="<%= img %>" alt="<%= product.name || 'Product' %> - Thumbnail <%= index + 1 %>" onerror="this.src='https://via.placeholder.com/60';">
                                    </div>
                                <% }); %>
                                <% if (!(product.additionalImages && product.additionalImages.length)) { %>
                                    <div class="carousel-slide thumbnail">
                                        <img src="https://via.placeholder.com/60" alt="No Thumbnail">
                                    </div>
                                <% } %>
                            </div>
                        </div>
                        <h3><%= product.name || 'Unnamed Product' %></h3>
                        <p>$<%= (product.price || 0).toFixed(2) %></p>
                        <button data-product-id="<%= product.id %>">Add to Cart</button>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No products available.</p>
            <% } %>
        </section>
        <aside id="cart">
            <h2>Your Cart</h2>
            <ul id="cartItems"></ul>
            <p>Total: $<span id="cartTotal">0.00</span></p>
            <div id="cartPaypalButton"></div>
        </aside>
        <section id="checkout" style="display:none;">
            <h2>Finalize Your Upgrade</h2>
            <form id="checkoutForm">
                <input type="text" id="name" placeholder="Name" required><br>
                <input type="tel" id="phone" placeholder="Phone" required><br>
                <input type="text" id="address" placeholder="Address" required><br>
                <button type="button" id="ignitePurchase">Ignite Your Purchase!</button>
            </form>
        </section>
    </main>
    <footer>
        <p>Shipping: 2–6 weeks via trusted partners.</p>
        <p>Have questions? Contact us on <a href="https://x.com/@Brian_car_parts">X</a>.</p>
        <p>30-day returns for defective items. Contact us via PayPal.</p>
    </footer>

    <script type="application/json" id="products-data">
        <%- JSON.stringify(products) %>
    </script>
    <script>
        // PayPal SDK
        const paypalScript = document.createElement('script');
        paypalScript.src = `https://www.sandbox.paypal.com/sdk/js?client-id=<%= clientId %>&currency=USD`; // Switched to sandbox
        paypalScript.async = true;
        paypalScript.onload = () => {
            console.log('PayPal SDK loaded successfully');
            if (typeof initializePayPalButton === 'function') {
                initializePayPalButton();
            } else {
                console.error('initializePayPalButton is not defined after SDK load');
            }
        };
        paypalScript.onerror = (e) => console.error('PayPal SDK failed to load:', e);
        document.head.appendChild(paypalScript);

        // Global PayPal button initialization function
        function initializePayPalButton() {
            if (window.paypal) {
                paypal.Buttons({
                    createOrder: (data, actions) => {
                        const cartTotal = document.getElementById('cartTotal').textContent || '0.00';
                        return actions.order.create({
                            purchase_units: [{
                                amount: {
                                    value: cartTotal,
                                    currency_code: 'USD'
                                }
                            }]
                        });
                    },
                    onApprove: (data, actions) => {
                        return actions.order.capture().then((details) => {
                            alert('Transaction completed by ' + (details.payer.name?.given_name || 'User'));
                        });
                    },
                    onError: (err) => {
                        console.error('PayPal Button Error:', err);
                    }
                }).render('#cartPaypalButton');
            } else {
                console.error('PayPal SDK not available after load. Rendered clientId:', '<%= clientId %>');
            }
        }

    // Cart and PayPal initialization
document.addEventListener('DOMContentLoaded', () => {
    // Cart functionality
    window.cart = {};
    document.querySelectorAll('#productGrid button').forEach(button => {
        button.addEventListener('click', () => {
            const id = button.getAttribute('data-product-id');
            console.log('Adding to cart with id from button:', id);
            window.cart[id] = (window.cart[id] || 0) + 1;
            updateCart();
        });
    });

    function updateCart() {
        const cartItems = document.getElementById('cartItems');
        cartItems.innerHTML = '';
        let total = 0;
        const productsDataRaw = document.getElementById('products-data').textContent;
        console.log('Raw products data:', productsDataRaw); // Log raw JSON
        let productsData;
        try {
            productsData = JSON.parse(productsDataRaw);
            console.log('Parsed products data:', JSON.stringify(productsData, null, 2)); // Log parsed data
        } catch (e) {
            console.error('Failed to parse products data:', e);
            return;
        }
        if (!productsData || productsData.length === 0) {
            console.warn('No products data available');
            return;
        }
        for (let id in window.cart) {
            const product = productsData.find(p => p.id === id);
            console.log('Searching for id:', id, 'in productsData IDs:', productsData.map(p => p.id));
            console.log('Found product:', product);
            if (product && product.title) {
                const li = document.createElement('li');
                li.textContent = `${product.title} x${window.cart[id]} - $${(parseFloat(product.price) * window.cart[id]).toFixed(2)}`;
                cartItems.appendChild(li);
                total += parseFloat(product.price) * window.cart[id];
            } else if (product) {
                console.warn(`Product with id ${id} found but missing title. Using name: ${product.name}`);
                const li = document.createElement('li');
                li.textContent = `${product.name || 'Unnamed Item'} x${window.cart[id]} - $${(parseFloat(product.price) * window.cart[id]).toFixed(2)}`;
                cartItems.appendChild(li);
                total += parseFloat(product.price) * window.cart[id];
            } else {
                console.warn(`Product with id ${id} not found. Available IDs:`, productsData.map(p => p.id));
            }
        }
        document.getElementById('cartTotal').textContent = total.toFixed(2);
    }
})   
</script>
</body>
</html>